--- cma.c	2010-08-18 19:03:16.000000000 -0700
+++ cma.moredebug.c	2010-10-26 23:22:09.000000000 -0700
@@ -43,7 +44,7 @@
 static void class_printList(MNode list) {
   if (!list)
     return;
-  printf("Node %p, %ld\n",list,list->size);
+  printf("Node %p, %ud\n",list,list->size);
   class_printList(list->next);
 }
 
@@ -60,7 +61,7 @@
   item = (MNode)mem;
   item->size=size-sizeof(struct MemNode);
   item->next = NULL;
-  
+  DEBUG("Creating Initial NoUseList with %x: %ud",item,size);
   class_nouse = class_AddToList(class_nouse,item);
 }
 
@@ -78,11 +79,13 @@
   MNode best=NULL;
   MNode p;
 
+  DEBUG("Searching for a block of size: %ud",target);
   for (p=class_nouse;p!=NULL;p=p->next) {
     c = p->size - target;
     if (c >= 0 && c<closeness) {
       best = p;
       closeness=c;
+      DEBUG("Best is now: %x size=%ud",best,p->size);
     }
   }
   return best;
@@ -94,11 +97,14 @@
 	
 	//we need room for a new header
 	if ( (orgsz-size-sizeof(struct MemNode)) > 0 ) {
+		DEBUG("Node split: %ud => %ud,%ud",org->size,size,orgsz-sizeof(struct MemNode)-size);
 		org->size = size;
 		extra = (MNode)((void*)org+size+sizeof(struct MemNode));
 		extra->next = 0;
 		extra->size = orgsz-sizeof(struct MemNode)-size;
 	}
+	else
+		DEBUG("Node does not have enough size to split:%ud %ud",org->size,size);
 	
 	return extra;
 }
@@ -168,7 +174,7 @@
   class_printList(class_nouse);
 
   printf("Counters:\n");
-#define DUMPC(x) printf(" %10s : %d\n",#x,class_counters.x)
+#define DUMPC(x) printf(" %10s : %ld\n",#x,class_counters.x)
   DUMPC(malloc);
   DUMPC(calloc);
   DUMPC(realloc);
